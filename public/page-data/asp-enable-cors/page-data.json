{"componentChunkName":"component---src-templates-blog-post-js","path":"/asp-enable-cors/","result":{"data":{"site":{"siteMetadata":{"title":"Chris Hibler"}},"markdownRemark":{"id":"c8f0b1f8-3ebd-5daf-b331-953c17b2b141","excerpt":"How to Enable CORS in ASP.NET Core Cross-Origin Resource Sharing (CORS) is a mechanism that allows web applications to access resources from different domainsâ€¦","html":"<h1>How to Enable CORS in ASP.NET Core</h1>\n<p>Cross-Origin Resource Sharing (CORS) is a mechanism that allows web applications to access resources from different domains. By default, browsers block cross-origin HTTP requests for security reasons. However, you can enable CORS in an ASP.NET Core application to allow such requests when needed. This article will guide you through enabling CORS step-by-step in an ASP.NET Core application using the modern minimal hosting model.</p>\n<h3>Why Do You Need CORS?</h3>\n<p>Imagine you have a front-end application hosted at <code class=\"language-text\">https://frontend.example.com</code> trying to access an API hosted at <code class=\"language-text\">https://api.example.com</code>. Without CORS enabled, the browser will block this request, resulting in a <em>CORS policy error</em>. Enabling CORS allows you to specify which domains can access your API securely.</p>\n<hr>\n<h3>Step 1: Add CORS Services</h3>\n<p>The first step is to add the CORS services to your application.</p>\n<ol>\n<li>Open the <code class=\"language-text\">Program.cs</code> file.</li>\n<li>Register the CORS services using <code class=\"language-text\">AddCors</code> in the service configuration section:</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> builder <span class=\"token operator\">=</span> WebApplication<span class=\"token punctuation\">.</span><span class=\"token function\">CreateBuilder</span><span class=\"token punctuation\">(</span>args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Add services to the container.</span>\nbuilder<span class=\"token punctuation\">.</span>Services<span class=\"token punctuation\">.</span><span class=\"token function\">AddCors</span><span class=\"token punctuation\">(</span>options <span class=\"token operator\">=></span>\n<span class=\"token punctuation\">{</span>\n    options<span class=\"token punctuation\">.</span><span class=\"token function\">AddPolicy</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"AllowSpecificOrigins\"</span><span class=\"token punctuation\">,</span> builder <span class=\"token operator\">=></span>\n    <span class=\"token punctuation\">{</span>\n        builder<span class=\"token punctuation\">.</span><span class=\"token function\">WithOrigins</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"https://frontend.example.com\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// Replace with your allowed origins</span>\n               <span class=\"token punctuation\">.</span><span class=\"token function\">AllowAnyHeader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n               <span class=\"token punctuation\">.</span><span class=\"token function\">AllowAnyMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nbuilder<span class=\"token punctuation\">.</span>Services<span class=\"token punctuation\">.</span><span class=\"token function\">AddControllers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> app <span class=\"token operator\">=</span> builder<span class=\"token punctuation\">.</span><span class=\"token function\">Build</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Alternatively you may use <code class=\"language-text\">options.AddDefaultPolicy</code> to avoid having to specify and reference a name.</p>\n<h3>Step 2: Apply the CORS Policy</h3>\n<p>You need to apply the CORS policy to your application. There are two main ways to do this: globally or for specific endpoints.</p>\n<h4>Globally</h4>\n<p>To enable the policy for all controllers, use the <code class=\"language-text\">UseCors</code> middleware in the request pipeline configuration:</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">app<span class=\"token punctuation\">.</span><span class=\"token function\">UseCors</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"AllowSpecificOrigins\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Apply CORS policy globally</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">UseHttpsRedirection</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\napp<span class=\"token punctuation\">.</span><span class=\"token function\">UseAuthorization</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">MapControllers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">Run</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4>Per Endpoint</h4>\n<p>To enable CORS for specific endpoints, use the <code class=\"language-text\">[EnableCors]</code> attribute:</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">ApiController</span></span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">Route</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"api/[controller]\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyController</span> <span class=\"token punctuation\">:</span> <span class=\"token type-list\"><span class=\"token class-name\">ControllerBase</span></span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">HttpGet</span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">[</span><span class=\"token attribute\"><span class=\"token class-name\">EnableCors</span><span class=\"token attribute-arguments\"><span class=\"token punctuation\">(</span><span class=\"token string\">\"AllowSpecificOrigins\"</span><span class=\"token punctuation\">)</span></span></span><span class=\"token punctuation\">]</span>\n    <span class=\"token keyword\">public</span> <span class=\"token return-type class-name\">IActionResult</span> <span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">Ok</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"CORS is enabled for this endpoint.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<hr>\n<h3>Step 3: Allow All Origins (Optional)</h3>\n<p>If you want to allow all origins, you can modify the CORS policy as follows:</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\">builder<span class=\"token punctuation\">.</span>Services<span class=\"token punctuation\">.</span><span class=\"token function\">AddCors</span><span class=\"token punctuation\">(</span>options <span class=\"token operator\">=></span>\n<span class=\"token punctuation\">{</span>\n    options<span class=\"token punctuation\">.</span><span class=\"token function\">AddPolicy</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"AllowAll\"</span><span class=\"token punctuation\">,</span> builder <span class=\"token operator\">=></span>\n    <span class=\"token punctuation\">{</span>\n        builder<span class=\"token punctuation\">.</span><span class=\"token function\">AllowAnyOrigin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n               <span class=\"token punctuation\">.</span><span class=\"token function\">AllowAnyHeader</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n               <span class=\"token punctuation\">.</span><span class=\"token function\">AllowAnyMethod</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Then, use <code class=\"language-text\">\"AllowAll\"</code> as the policy name when applying CORS globally or per endpoint. <strong>Note</strong>: Allowing all origins may expose your API to security risks, so use it with caution.</p>\n<h3>Step 4: Testing the CORS Setup</h3>\n<p>Once you've configured CORS, test it by sending a request from a different origin using a tool like Postman, a browser, or your front-end application. Check the response headers for the <code class=\"language-text\">Access-Control-Allow-Origin</code> entry to confirm that CORS is working as expected.</p>\n<h3>Common Issues and Troubleshooting</h3>\n<ol>\n<li><strong>Policy Not Applied:</strong> Ensure the policy name in <code class=\"language-text\">UseCors</code> matches the one defined in <code class=\"language-text\">AddCors</code>.</li>\n<li><strong>Options Requests Failing:</strong> If your API has complex requests, ensure the <code class=\"language-text\">OPTIONS</code> method is allowed.</li>\n<li><strong>Misconfigured Origins:</strong> Double-check the domain names in the <code class=\"language-text\">WithOrigins</code> method.</li>\n</ol>\n<h3>Conclusion</h3>\n<p>Enabling CORS in ASP.NET Core using the modern hosting model is straightforward and ensures secure cross-origin resource sharing. By understanding and configuring CORS policies effectively, you can enhance your application's interoperability while maintaining security.</p>\n<p>If you found this guide helpful, feel free to share it with your peers!</p>","frontmatter":{"title":"Enable CORS in ASP.NET Core (WebAPI)","date":"January 20, 2025","description":"How to enable CORS in ASP.NET Core"}},"previous":{"fields":{"slug":"/asp-middleware/"},"frontmatter":{"title":"ASP.NET Request Logging Middleware"}},"next":null},"pageContext":{"id":"c8f0b1f8-3ebd-5daf-b331-953c17b2b141","previousPostId":"16a7f214-3bd0-5ab2-bd35-a91d0ee765bf","nextPostId":null}},"staticQueryHashes":["2841359383","3274528899","3694596504"],"slicesMap":{}}